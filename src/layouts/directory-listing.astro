---
import { uniq } from 'remeda'

const { folder, label } = Astro.props

const unslash = str => str.replaceAll('-', ' ')

const getLabel = (page, folders) => {
  let label = page.file.split('/').pop().split('.')[0]
  if (folders.includes(label)) label += '/'
  return unslash(label)
}

const getParentDir = path => path.split('/').slice(0, -1).pop()

const rawPages = await Astro.glob('../pages/**/*.{astro,md}')
const folders = uniq(rawPages.map(p => getParentDir(p.file)))
const pages = rawPages
  .filter(page => !page.frontmatter?.draft)
  .filter(page => getParentDir(page.file) === folder)
  .map(page => ({ url: page.url, label: getLabel(page, folders) }))
  .filter(page => page.label !== 'index')

if (folder !== 'pages') {
  pages.unshift({ url: '/', label: '../' }) // add 'back' link
}
---

<div>
  <h1>{folder === 'pages' ? 'index' : unslash(folder)}/</h1>

  <hr />
  <pre>{pages.map(p => <a href={p.url}>{p.label}</a>)}</pre>
  <hr />
</div>

<style>
  div {
    margin: 8px;
  }

  h1 {
    font-family: var(--old-style);
    margin-bottom: 20px;
    text-transform: capitalize;
  }

  hr {
    margin: 8px 0;
  }

  pre {
    margin: 13px 0;
  }

  a {
    display: block;
    font-family: var(--mono);
    font-size: 13px;
  }
</style>
